/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package virtual.pet.shelter;

import java.util.HashMap;
import java.util.Map;

public class VirtualPetShelter {
    public Map<Integer,VirtualPet> petShelter = new HashMap<>();
    private int petID;

    public void meetThePets(){
        System.out.println();
        System.out.println("Let's meet the pets!!!");
        System.out.println("-----------------|--------------------------------------------------------------------");
        System.out.println("Name\t\t |Description");
        System.out.println("-----------------|--------------------------------------------------------------------");
        for (Map.Entry<Integer,VirtualPet> entry: petShelter.entrySet()){
            VirtualPet virtualPet = entry.getValue();
            if(virtualPet.getName().length()>6){
                System.out.print(virtualPet.name+"\t |");
            }
            else{
                System.out.print(virtualPet.name+"\t\t |");
            }
            System.out.println(virtualPet.getDescription());
        }
        System.out.println("-----------------|--------------------------------------------------------------------");

    }

    public void displayPets(){
        System.out.println();
        System.out.println("-----------------|---------------|---------------|---------------|-----------------------");
        System.out.println("Name\t\t |Hunger  \t |Thirst  \t |Boredom \t |Energy Level (Note: The higher the better!)");
        System.out.println("-----------------|---------------|---------------|---------------|-----------------------");
        for (Map.Entry<Integer,VirtualPet> entry: petShelter.entrySet()){
            VirtualPet virtualPet = entry.getValue();
            if(virtualPet.getName().length()>6){
                System.out.print(virtualPet.name+"\t |");
            }
            else{
                System.out.print(virtualPet.name+"\t\t |");
            }
            System.out.println(virtualPet.getHungerLevel()+"\t\t |"
            +virtualPet.getThirstLevel()+" \t\t |"+virtualPet.getBoredomLevel()+" \t\t |"+virtualPet.getEnergyLevel());
        }
        System.out.println("-----------------|---------------|---------------|---------------|-----------------------");
    }
    
    public VirtualPet getSpecificPet(VirtualPet virtualPet){
        for (Map.Entry<Integer,VirtualPet> entry: petShelter.entrySet()){
            if(virtualPet == entry.getValue()){
                return entry.getValue();
            }
        } return null;
    }

    public void intakePet(VirtualPet virtualPet){
        petID++;
        petShelter.put(petID, virtualPet);
    }

    public void intakePet(String petName, String description){
        petID++;
        VirtualPet newPet = new VirtualPet(petName,description);
        petShelter.put(petID, newPet);
        System.out.println(petName+" has been admitted to the pet shelter! ");
    }

    public void adoptPet(String petName){
        Boolean containsPet = false;
        int id = 0;
        for (Map.Entry<Integer,VirtualPet> entry: petShelter.entrySet()){
            if(petName.equalsIgnoreCase(entry.getValue().name)){
                containsPet = true;
                id = entry.getKey();
                System.out.println(petName+" has finally found a nice home! Goodbye "+petName+"!");
            }
        }
        petShelter.remove(id);
        if (containsPet==false){
            System.out.println("Sorry, that pet is not a pet located at this shelter :,<");
        } 
    }

    public void feedAllPets(){
        for (Map.Entry<Integer,VirtualPet> entry: petShelter.entrySet()){
            entry.getValue().feedPet();
        }
    }

    public void waterAllPets(){
        for (Map.Entry<Integer,VirtualPet> entry: petShelter.entrySet()){
            entry.getValue().givePetWater();
        }
    }

    public void playWithAPet(String petName){
        Boolean containsPet = false;
        for (Map.Entry<Integer,VirtualPet> entry: petShelter.entrySet()){
            if(petName.equalsIgnoreCase(entry.getValue().name)){
                containsPet = true;
                entry.getValue().playWithPet();
            }
        }
        if (containsPet==false){
            System.out.println("Sorry, that pet is not a pet located at this shelter :,<");
        } 
    }

    public void tick(){
        System.out.println();
        System.out.println("Time has passed. There are new stats for the pets.");
        for (Map.Entry<Integer,VirtualPet> entry: petShelter.entrySet()){
            entry.getValue().tick();
        }
    }

}

